#DEFINITIONS:  -*-sh-*-
#
# This is a test of weighting function calculations under cloudy conditions
# using iyHybrid with background field from RT4 calculations.
#
# Author: Jana Mendrok


Arts2{
# include general settings
INCLUDE "general/general.arts"
INCLUDE "general/continua.arts"
INCLUDE "general/agendas.arts"
INCLUDE "general/agendasDOIT.arts"
INCLUDE "general/planet_earth.arts"

# 1.General ARTS calculation Setup -------------------------------
#----------------------------------------------------------------- 

VectorCreate( yref )

# Preparing  a bunch of required agendas
Copy(abs_xsec_agenda, abs_xsec_agenda__noCIA)
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )
Copy( ppath_agenda, ppath_agenda__FollowSensorLosPath )
Copy( ppath_step_agenda, ppath_step_agenda__GeometricPath )

AgendaCreate( iy_main_agenda__Hybrid )
AgendaSet( iy_main_agenda__Hybrid ){
  Ignore( iy_id )
  ppathCalc( cloudbox_on = 0 ) 
  iyHybrid
  Touch(iy_aux)
}

output_file_formatSetAscii


VectorSet( f_grid, [190.e9] )
IndexSet ( stokes_dim, 1 )
AtmosphereSet1D
StringSet( iy_unit, "PlanckBT" )

VectorSetConstant( surface_scalar_reflectivity, 1, 0.4)
Copy( surface_rtprop_agenda, surface_rtprop_agenda__Specular_NoPol_ReflFix_SurfTFromt_field )

MatrixSet( sensor_los,  [180.] ) #; 150.])
nrowsGet( nrows, sensor_los )
ncolsGet( ncols, sensor_los )
MatrixSetConstant( sensor_pos, nrows, ncols, 600e3 )
#VectorNLinSpace( sensor_time, nrows, 0, 1 )
VectorSetConstant( sensor_time, nrows, 0. )
sensorOff

# some stuff for temperature perturbations
NumericSet( p_hse, 1000e2 )
NumericSet( z_hse_accuracy, 1 )
VectorSet( lat_true, [15] )
VectorSet( lon_true, [123] )

#ReadXML( batch_atm_fields_compact, "chevallierl91_all_extract_RWC.xml" )
ReadXML( batch_atm_fields_compact, "testdata/chevallierl91_all_extract.xml" )
batch_atm_fields_compactAddConstant( name="abs_species-O2", value=0.2095 )
batch_atm_fields_compactAddConstant( name="abs_species-N2", value=0.7808 )


abs_speciesSet( species=[ "H2O-PWR98",
                          "O3",
                          "O2-PWR93",
                          "N2-SelfContStandardType" ] )

ReadXML( abs_lookup, "artscomponents/doitbatch/abs_lookupBatch.xml" )
abs_lookupAdapt 
Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__LookUpTable )


ScatSpeciesInit

scat_speciesSet(scat_tags=[
#                    "LWC-MGD_LWC",
                    "IWC-MH97",
                    "RR-W16"
#                    "SR-F07TR"
])

# Microphysics
# scat species #0
ArrayOfStringSet( pnd_agenda_input_names, [ "IWC" ] ) # parameters of this PSD.
                                                      # can be multiple (T not to
                                                      # appear here; is passed
                                                      # anyways).
Append( pnd_agenda_array_input_names, pnd_agenda_input_names )
ArrayOfAgendaAppend( pnd_agenda_array ){
  ScatSpeciesSizeMassInfo( species_index=agenda_array_index, x_unit="dveq" )
  Copy( psd_size_grid, scat_species_x )
  Copy( pnd_size_grid, scat_species_x )
  psdMH97 #( t_min=258 ) # t-limits modified for consistency with
                      # pnd_fieldCalcFromscat_speciesFields interface
  pndFromPsd( scat_index=agenda_array_index )
  #pndAdjustFromScatMeta( scat_index=agenda_array_index, pnd_agenda_input_tag="RWC" )
}

# scat species #1
ArrayOfStringSet( pnd_agenda_input_names, [ "RWC" ] ) # parameters of this PSD.
                                                      # can be multiple (T not to
                                                      # appear here; is passed
                                                      # anyways).
Append( pnd_agenda_array_input_names, pnd_agenda_input_names )
ArrayOfAgendaAppend( pnd_agenda_array ){
  ScatSpeciesSizeMassInfo( species_index=agenda_array_index, x_unit="dveq" )
  Copy( psd_size_grid, scat_species_x )
  Copy( pnd_size_grid, scat_species_x )
  psdWang16( t_min=258 ) # t-limits modified for consistency with
                         # pnd_fieldCalcFromscat_speciesFields interface
                         # to W16, which has no t-limits at all (but scat_data
                         # allow T down to 210K at most. hence, t_min=0 doesn't
                         # work either.)
                         # semi-sensible setting that is still consistent with
                         # pnd_fieldCalcFromscat_speciesFields:
                         # allowing supercooled rain drops down to -15C
  pndFromPsd( scat_index=agenda_array_index )
  #pndAdjustFromScatMeta( scat_index=agenda_array_index, pnd_agenda_input_tag="RWC" )
}

ArrayOfStringCreate( scat_data_files )
ReadXML( scat_data_files, "scattering/H2O_ice/SingleScatteringFile_allH2Oice.xml" )
ScatSpeciesScatAndMetaRead ( scat_data_files=scat_data_files )
ReadXML( scat_data_files, "scattering/H2O_liquid/SingleScatteringFile_allH2Oliquid.xml" )
ScatSpeciesScatAndMetaRead ( scat_data_files=scat_data_files )
scat_dataCalc
scat_data_checkedCalc

doit_za_interpSet( doit_za_interp, atmosphere_dim, "linear" )



#----------------------------------------------------------------- 
# 2. Doit Jacobian specific settings -----------------------------
#----------------------------------------------------------------- 

# Convergence test agenda
# -----------------------

# Prepare some container variables holding the Doit Jacobian control parameters
VectorCreate( doit_epsilon_ref )
VectorCreate( doit_epsilon_perturb )
IndexCreate( n_iterations )
ArrayOfIndexCreate( cloudlimit_levels )

# convergence agenda for reference case
AgendaCreate( doit_conv_test_agenda_refcase )
AgendaSet( doit_conv_test_agenda_refcase ){
  doit_conv_flagAbsBT( epsilon=doit_epsilon_ref )
  #Print(doit_iteration_counter,0)
  #WriteXMLIndexed(in=doit_i_field,file_index=doit_iteration_counter)
}

# convergence agenda for perturbation runs
AgendaCreate( doit_conv_test_agenda_perturb )
AgendaSet( doit_conv_test_agenda_perturb ){
  doit_conv_flagAbsBT( epsilon=doit_epsilon_perturb,
                       max_iterations=n_iterations )
  #Print(doit_iteration_counter,0)
}

# The main DOIT agenda 
# --------------------
AgendaSet( doit_mono_agenda ){
  DoitScatteringDataPrepare
  Ignore( f_grid )
  doit_i_field_monoIterate
}



StringCreate( info )
StringCreate( scat_name )
Tensor3Create( scat_field )
ArrayOfTensor4Create( dpnd_dummy )

# 3. The RT and Jacobian calculation -----------------------------
#----------------------------------------------------------------- 

ArrayOfArrayOfSingleScatteringDataCreate( scat_data_orig )
ArrayOfArrayOfScatteringMetaDataCreate( scat_meta_orig )
ArrayOfStringCreate( scat_species_orig )
Tensor4Create( pnd_field_orig )

AgendaSet( ybatch_calc_agenda ){
  Touch( y_aux )

  # Extract compact atmosphere from the batch of atmospheric states
  Extract( atm_fields_compact, batch_atm_fields_compact, ybatch_index )

  # Split up compact atmosphere into atmospheric fields
  AtmFieldsFromCompact

  # for now AtmFieldsFromCompact extracts into scat_species_*_*_field(s)
  # hence, to get the data into particle_bulkprop_field, we need to do a bit of
  # massaging...
  # (what exactly needs to be done depends a bit on what is in the compact atm
  # data, and therefore need to be manually adjusted for your specific atm
  # compact data :-/ )
  Extract( scat_field, scat_species_mass_density_field, 0 )
  Append( particle_bulkprop_field, scat_field )
  StringSet( scat_name, "IWC" )
  Append( particle_bulkprop_names, scat_name )
  #Extract( scat_field, scat_species_mass_density_field, 1 )
  Extract( scat_field, scat_species_mass_flux_field, 1 )
  Append( particle_bulkprop_field, scat_field )
  StringSet( scat_name, "RWC" )
  Append( particle_bulkprop_names, scat_name )

  # Remove unrealistic (small) values from scat_species_*_*_fields
  particle_fieldCleanup (scat_species_mass_density_field,
                         scat_species_mass_density_field,
                         1e-7)
  particle_fieldCleanup (scat_species_mass_flux_field,
                         scat_species_mass_flux_field,
                         1e-7)
  particle_fieldCleanup (particle_bulkprop_field,
                         particle_bulkprop_field,
                         1e-7)

  # Get some surface properties from corresponding atmospheric fields
  Extract( z_surface, z_field, 0 )


  #####
  # iyHybrid
  #####

  jacobianInit
  jacobianAddScatSpecies( g1=p_grid, g2=lat_grid, g3=lon_grid,
                          species="RR-W16",
                          quantity="RWC" )
  jacobianAddScatSpecies( g1=p_grid, g2=lat_grid, g3=lon_grid,
                          species="IWC-MH97",
                          quantity="IWC" )
  jacobianAddAbsSpecies( g1=p_grid, g2=lat_grid, g3=lon_grid,
                         species="H2O-PWR98",
                         unit="vmr" )
  jacobianClose
  cloudboxSetFullAtm
  pnd_fieldCalcFromParticleBulkProps
  atmgeom_checkedCalc
  atmfields_checkedCalc( bad_partition_functions_ok = 1 )
  cloudbox_checkedCalc
  sensor_checkedCalc
  propmat_clearsky_agenda_checkedCalc
  StringSet( info, "RT4Calc" )
  Print( info, 0 )
  RT4Calc
  Copy( iy_main_agenda, iy_main_agenda__Hybrid )
  StringSet( info, "yCalc with iyHybrid" )
  Print( info, 0 )
  yCalc
  Copy( yref, y )
}

# for batch cases:
nelemGet( ybatch_n, batch_atm_fields_compact )
IndexSet(ybatch_start, 5)
IndexSet(ybatch_n, 1)
ybatchCalc #( robust=1 )


# Verify results
# ---
ArrayOfVectorCreate( ybatch_ref )
#ReadXML( ybatch_ref, "ybatchREFERENCE_DoitJacobians.xml" )
ReadXML( ybatch_ref, "ybatchREFERENCE_iyHybrid.xml" )

CompareRelative( ybatch, ybatch_ref, 1e-9 )

ArrayOfMatrixCreate( ybatch_jacobians_ref )
#ReadXML( ybatch_jacobians_ref, "ybatch_jacobiansREFERENCE_DoitJacobians.xml" )
ReadXML( ybatch_jacobians_ref, "ybatch_jacobiansREFERENCE_iyHybrid.xml" )

CompareRelative( ybatch_jacobians, ybatch_jacobians_ref, 1e-6 )

}
