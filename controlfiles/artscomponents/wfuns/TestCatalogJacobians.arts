# Testfile for ground-based Mars sensor

Arts2{

#################################################################################
# Includes that define ARTS
#################################################################################

INCLUDE "general/general.arts"
INCLUDE "general/continua.arts"
INCLUDE "general/agendas.arts"
INCLUDE "general/planet_earth.arts"

################################################################################
# Basic setup
VectorNLinSpace(f_grid, 201, 80e9, 121e9)
MatrixSet(sensor_pos, [300e3, 0, 0])
MatrixSet(sensor_los, [180, 0])

#################################################################################

#################################################################################
# Agenda setup
#################################################################################

# Agenda for scalar gas absorption calculation
AgendaSet( abs_xsec_agenda){
  abs_xsec_per_speciesInit
  abs_xsec_per_speciesAddLines
}

# (standard) emission calculation
Copy( iy_main_agenda, iy_main_agenda__Emission )

# cosmic background radiation
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )

# standard surface agenda (i.e., make use of surface_rtprop_agenda)
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )

# sensor-only path
Copy( ppath_agenda, ppath_agenda__FollowSensorLosPath )

# no refraction
Copy( ppath_step_agenda, ppath_step_agenda__GeometricPath )

# on-the-fly absorption considering Zeeman splitting
Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__OnTheFly )

# surface rt prop
Copy( surface_rtprop_agenda, surface_rtprop_agenda__Blackbody_SurfTFromt_surface )

#################################################################################
# Standard settings
#################################################################################

# Stokes dimension.  Change to 1 if Zeeman is not interesting
IndexSet( stokes_dim, 1 )

# Planck brighness temperatures
StringSet( iy_unit, "PlanckBT" )

# No cutoff, full line shape
abs_lineshapeDefine( abs_lineshape, "Faddeeva_Algorithm_916", "VVH", -1 )

#################################################################################
# Definition of planetary grid
#################################################################################

# Latitude grid
VectorSet(lat_grid, [ -20, 0, 20 ])

# Longitude grid
VectorSet(lon_grid, [ -20, 0, 20 ])

# Pressure grid covering most situations from below ground up to about 100 km
VectorCreate(p_jac)
VectorNLogSpace( p_grid, 101, 1e5, 1e-1 )

#################################################################################
# Definition of atmosphere
#################################################################################

# Definition of species
abs_speciesSet( species=[ "O2-LM-66"] )
                         
# Read line catalogue
ReadXML(abs_lines_per_species, "testline.xml")

# Atmospheric species and temperatures
AtmosphereSet3D
AtmRawRead( basename = "planets/Earth/Fascod/tropical/tropical" )
AtmFieldsCalcExpand1D
Extract( z_surface, z_field, 0 )
Extract( t_surface, t_field, 0 )

#################################################################################
# Sensor definitions
#################################################################################

# Sensor is just antenna
sensorOff

#################################################################################
# Jacobian definitions
#################################################################################

ArrayOfQuantumIdentifierCreate(aqi)
ReadXML(aqi, "linematch.xml")

# Dummy vector
jacobianInit
jacobianAddCatalogParameters(catalog_identities = aqi, 
                             catalog_parameters = ["Line Strength", "Line Center", 
                             "PB Self Gamma", "PB Self Exponent", 
                             "PB Foreign Gamma", 
                             "PB Foreign Exponent", "PB Foreign Pressure Shift",
                             "LM Y Zeroth", "LM Y Exponent"])
jacobianClose

#################################################################################
# Particulate definitions
#################################################################################

# No scattering
cloudboxOff

#################################################################################
# Radiative transfer
#################################################################################

# Perform checks
abs_xsec_agenda_checkedCalc
propmat_clearsky_agenda_checkedCalc
atmfields_checkedCalc(bad_partition_functions_ok=1)
atmgeom_checkedCalc
cloudbox_checkedCalc
sensor_checkedCalc

#################################################################################
# The calculations
#################################################################################

yCalc
#WriteXML( "ascii", jacobian, "ReferenceJacobianInTestErrorJacobian.xml")

# Loac testing jacobian
MatrixCreate(test_jacobian)
ReadXML(test_jacobian, "ReferenceJacobianInTestErrorJacobian.xml")

# There is a vastly different scale between the different line parameters,
# so we have to test them one-by-one
VectorCreate(calculated)
VectorCreate(reference)
StringCreate(column)
StringSet(column, "column")

VectorExtractFromMatrix( calculated, jacobian, 0, column )
VectorExtractFromMatrix( reference, test_jacobian, 0, column)
CompareRelative(calculated, reference, 1e-5, "Line Strength Comparison Fails")

VectorExtractFromMatrix( calculated, jacobian, 1, column )
VectorExtractFromMatrix( reference, test_jacobian, 1, column)
CompareRelative(calculated, reference, 1e-5, "Line Center Comparison Fails")

VectorExtractFromMatrix( calculated, jacobian, 2, column )
VectorExtractFromMatrix( reference, test_jacobian, 2, column)
CompareRelative(calculated, reference, 1e-5, "PB Self Gamma Comparison Fails")

VectorExtractFromMatrix( calculated, jacobian, 3, column )
VectorExtractFromMatrix( reference, test_jacobian, 3, column)
CompareRelative(calculated, reference, 1e-5, "PB Self Exponent Comparison Fails")

VectorExtractFromMatrix( calculated, jacobian, 4, column )
VectorExtractFromMatrix( reference, test_jacobian, 4, column)
CompareRelative(calculated, reference, 1e-5, "PB Foreign Gamma Comparison Fails")

VectorExtractFromMatrix( calculated, jacobian, 5, column )
VectorExtractFromMatrix( reference, test_jacobian, 5, column)
CompareRelative(calculated, reference, 1e-5, "PB Foreign Exponent Comparison Fails")

VectorExtractFromMatrix( calculated, jacobian, 6, column )
VectorExtractFromMatrix( reference, test_jacobian, 6, column)
CompareRelative(calculated, reference, 1e-5, "PB Foreign Pressure Shift Comparison Fails")

VectorExtractFromMatrix( calculated, jacobian, 7, column )
VectorExtractFromMatrix( reference, test_jacobian, 7, column)
CompareRelative(calculated, reference, 1e-5, "LM Y Zeroth Comparison Fails")

VectorExtractFromMatrix( calculated, jacobian, 8, column )
VectorExtractFromMatrix( reference, test_jacobian, 8, column)
CompareRelative(calculated, reference, 1e-5, "LM Y Exponent Comparison Fails")

}
