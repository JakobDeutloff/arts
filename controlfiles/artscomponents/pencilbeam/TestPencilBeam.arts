#DEFINITIONS:  -*-sh-*-
#
# Demonstration and test of performing a single monochromatic pencil beam 
# calculation, without involving any sensor characteristics. That is, how to
# calculate monochromatic pencil beam spectra without using yCalc.
#
# The case treats 1D limb sounding. The result is converted to a measurement
# vector, y, holding brightness temperatures. 
#
# 2012-02-17, Patrick Eriksson

Arts2 {

INCLUDE "general/general.arts"
INCLUDE "general/continua.arts"


# Frequency grid 
#
VectorNLinSpace( f_grid, 201, 325e9, 327e9 )


# A pressure grid rougly matching 0 to 80 km, in steps of 2 km.
#
VectorNLogSpace( p_grid, 41, 1000e2, 1 )


# Definition of species
# 
SpeciesSet( abs_species,
            ["H2O-PWR98", 
             "N2-SelfContStandardType",
             "O2-PWR93"] )

# No line data needed here
# 
abs_lines_per_speciesSetEmpty


# Atmospheric profiles
# 
AtmRawRead( t_field_raw, z_field_raw, vmr_field_raw, abs_species, 
            "atmosphere_data/tropical" )
#
AtmFieldsCalc


# Get ground altitude (z_surface) from z_field
Extract( z_surface, z_field, 0 )


# Definition of position and LOS (simulating limb sounding from 600 km)
# 
VectorSet( rte_pos, [ 600e3 ] )
VectorSet( rte_los, [ 113.3 ] )


# Perform RT calculations
# 
basics_checkedCalc
cloudbox_checkedCalc
IndexSet( mblock_index, -1 )   # A dummy value
iyCalc


# The standard choice is to use yCalc, and for conversion to Tb and other 
# later operations, the simplest is to convert the output from iyCalc to 
# the variables returned by yCalc:
#
yFromIy


# Convert to Tb
#
StringSet( y_unit, "RJBT" )
#
y_unitApply


# To save calculated spectrum and transmission
#
#output_file_formatSetAscii
#WriteXML( output_file_format, f_grid, "f_grid.xml" )
#WriteXML( output_file_format, y, "yREFERENCE.xml" )


# Check that results are OK with respect to an older reference calculation
#
VectorCreate( y0 )
#
ReadXML( y0, "yREFERENCE.xml" )
VectorCompare( y, y0 )

}
 
