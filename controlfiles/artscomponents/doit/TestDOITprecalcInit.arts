#DEFINITIONS:  -*-sh-*-
#
# Demonstration of a DOIT scattering calculation initialized from a previous
# solution instead of the clearsky field.
#
# Author: Jana Mendrok
# 
# Compared to TestDOIT the pnd_field is slightly varied and
# DOIT is initialized by the solution of TestDOIT.
#

Arts2 {

INCLUDE "doit_setup.arts"

# Perturbing the pnd_field by 1%
Tensor4Scale( out=pnd_field, in=pnd_field, value=1.01 )

# Main agenda for DOIT calculation
# --------------------------------
#
# Input: incoming field on the cloudbox boundary
# Ouput: the scattered field on the cloudbox boundary
AgendaSet( doit_mono_agenda ){
  Ignore(scat_i_lat)
  Ignore(scat_i_lon)
  # Prepare scattering data for DOIT calculation (Optimized method):
  DoitScatteringDataPrepare
  # Alternative method (needs less memory):
  #scat_data_monoCalc
  # Set first guess field:		
  doit_i_fieldSetFromdoit_i_field1D_spectrum
  #WriteXMLIndexed( in=doit_i_field_mono, file_index=f_index )
  # Perform iterations: 1. scattering integral. 2. RT calculations with 
  # fixed scattering integral field, 3. convergence test 
  doit_i_fieldIterate
  # Put solution into interface for clearsky calculation   
  DoitCloudboxFieldPut
  # Write the radiation field inside the cloudbox:
  #WriteXMLIndexed( in=doit_i_field_mono, file_index=f_index )
}


# DOIT calculation
propmat_clearsky_agenda_checkedCalc
atmfields_checkedCalc
atmgeom_checkedCalc
cloudbox_checkedCalc
sensor_checkedCalc

# Initialize Doit variables
DoitInit

ReadXML(doit_i_field1D_spectrum, "doit_i_field1D_spectrumREFERENCE_DOIT.xml")

# Calculate incoming radiation field at cloudbox boundary 
DoitGetIncoming

# Executes doit_mono_agenda for all frequencies
DoitCalc

# Calculate RT from cloudbox boundary to the sensor
#
StringSet( iy_unit, "RJBT" )
yCalc

WriteXML( in=y )

#==================stop==========================

#==================check==========================

VectorCreate(yREFERENCE)
ReadXML( yREFERENCE, "yREFERENCE_DOITprecalcInit.xml" )
Compare( y, yREFERENCE, 1e-6 )

} # End of Main
 
