Arts2{
  
  AgendaSet(abs_xsec_agenda) {abs_xsec_per_speciesInit abs_xsec_per_speciesAddLines2}

#   Can run with abs_xsec_per_speciesAddLines by uncommenting:
#   abs_lineshapeDefine(abs_lineshape, "Faddeeva_Algorithm_916", "no_norm", -1)
#   Will fail at first derivatives...
  
  ## Constants (changes here might require changes in perturbations to match)
  isotopologue_ratiosInitFromBuiltin
  partition_functionsInitFromBuiltin
  abs_speciesSet(species=["O2-66"])
  VectorNLinSpace(f_grid, 1001, 90e9, 110e9)
  VectorSet(rtp_nlte, [0.6, 0.4])
  VectorSet(rtp_vmr, [0.21])
  NumericSet(rtp_temperature, 250)
  NumericSet(rtp_pressure, 25000)
  NumericSet(lm_p_lim, 0)
  IndexSet(stokes_dim, 1)
  IndexSet(xsec_speedup_switch, 0)
  
  ## Calculate w/o NLTE
  nlteOff
  
  ## Comparative parameter
  ArrayOfPropagationMatrixCreate(testdata)
  
  ## Absorption lines (Voigt, no Zeeman, no NLTE, no mirroring, no normalization)
  ReadXML(abs_lines, "testdata/voigt-line.xml")
  ArrayOfLineRecordCreate(aolr)
  Copy(aolr, abs_lines)
  abs_lines_per_speciesCreateFromLines
  
  ## Line matching information
  ArrayOfQuantumIdentifierCreate(qi_lines)
  ReadXML(qi_lines, "testdata/qi-line.xml")
  QuantumIdentifierCreate(QI)
  Extract(QI, qi_lines, 0)
  
  ## Silly parameters that have to be set by agendas and ARTS in general but are completely useless for these calculations
  VectorSet(p_grid, [150])  # We have no grid
  VectorSet(lat_grid, [0])  # We have no grid
  VectorSet(lon_grid, [0])  # We have no grid
  IndexSet(atmosphere_dim, 1)  # We have no atmosphere
  MatrixSet(sensor_pos, [0, 0, 0])  # We have no sensor
  sensorOff  # We have no sensor
  IndexSet(propmat_clearsky_agenda_checked, 1)  # We have no propmat agenda
  
  ## Set up partial derivatives
  jacobianInit
  jacobianAddTemperature(g1=[150], g2=[0], g3=[0], dt=0.1)
  jacobianAddWind(g1=[150], g2=[0], g3=[0], dfrequency=0.1)
  jacobianAddAbsSpecies(g1=[150], g2=[0], g3=[0], species="O2-66", for_species_tag=0)
  jacobianAddCatalogParameters(catalog_identities=qi_lines, catalog_parameters=["Line Strength", "Line Center", 
                                                                                "PB Self Gamma", "PB Foreign Gamma", 
                                                                                "PB Self Exponent", "PB Foreign Exponent", 
                                                                                "PB Foreign Pressure Shift",
                                                                                "LM Y Zeroth", "LM G Zeroth", "LM DF Zeroth",
                                                                                "LM Y First", "LM G First", "LM DF First",
                                                                                "LM Y Exponent", "LM G Exponent", "LM DF Exponent"])
  jacobianClose
  
  # Perform calculations for analytical propagation matrix and derivatives
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat.xml")
#   WriteXML("ascii", dpropmat_clearsky_dx, "testdata/test-voigt/dpropmat.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  ReadXML(testdata, "testdata/test-voigt/dpropmat.xml")
  CompareRelative(testdata, dpropmat_clearsky_dx, 1e-4)
  
  # Turn off the jacobian to make for faster calculations for perturbations below
  jacobianOff
  
  # Perform calculations for perturbed temperature derivative
  NumericSet(rtp_temperature, 250.0001)
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  NumericSet(rtp_temperature, 250)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dT.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dT.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed VMR derivative
  VectorSet(rtp_vmr, [0.2101])
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  VectorSet(rtp_vmr, [0.21])
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dvmr.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dvmr.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed frequency derivative
  VectorNLinSpace(f_grid, 1001, 90000000100, 110000000100)
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  VectorNLinSpace(f_grid, 1001, 90e9, 110e9)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-df.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-df.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed line strength derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="Line Strength", change=1e-30, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-ds0.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-ds0.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed line center derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="Line Center", change=1e1, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-df0.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-df0.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed PB Self-gamma derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="PB Self Gamma", change=1e1, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dpb-sg.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dpb-sg.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed PB Foreign-gamma derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="PB Foreign Gamma", change=1e1, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dpb-fg.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dpb-fg.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed PB Self-exponent derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="PB Self Exponent", change=1e-5, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dpb-se.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dpb-se.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed PB Foreign-exponent derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="PB Foreign Exponent", change=1e-5, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dpb-fe.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dpb-fe.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed PB PSF derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="PB Foreign Pressure Shift", change=1, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dpb-fs.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dpb-fs.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM Y0 derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM Y Zeroth", change=1e-10, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-y0.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-y0.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM G0 derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM G Zeroth", change=1e-14, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-g0.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-g0.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM DF0 derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM DF Zeroth", change=1e-3, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-df0.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-df0.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM Y1 derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM Y First", change=1e-12, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-y1.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-y1.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM G1 derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM G First", change=1e-16, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-g1.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-g1.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM DF1 derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM DF First", change=1e-5, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-df1.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-df1.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM Y-exponent derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM Y Exponent", change=1e-3, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-ye.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-ye.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM G-exponent derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM G Exponent", change=1e-3, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-ge.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-ge.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
  
  # Perform calculations for perturbed LM DF-exponent derivative
  abs_linesChangeParameterForMatchingLines(QI=QI, parameter_name="LM DF Exponent", change=1e-3, relative=0, loose_matching=0)
  abs_lines_per_speciesCreateFromLines
  abs_xsec_agenda_checkedCalc
  propmat_clearskyInit
  propmat_clearskyAddOnTheFly
  Copy(abs_lines, aolr)
#   WriteXML("ascii", propmat_clearsky, "testdata/test-voigt/propmat-dlm-dfe.xml")
  ReadXML(testdata, "testdata/test-voigt/propmat-dlm-dfe.xml")
  CompareRelative(testdata, propmat_clearsky, 1e-6)
}