#DEFINITIONS:  -*-sh-*-
#
# Basic testing of some PSD methods
#
Arts2 {

# Test values
#
NumericCreate( iwc )    # Also applied for RWC
NumericCreate( dmean)
NumericCreate( ntot)
NumericCreate( max_dev )
#
NumericSet( iwc, 1e-4 )
NumericSet( dmean, 1e-4 )
NumericSet( ntot, 1e6 )
NumericSet( max_dev, 1e-2 )

# Create some general input data
#
VectorLinSpace( psd_size_grid, 5e-6, 5e-3, 5e-6 )
VectorSet( pnd_agenda_input_t, [273] )
ArrayOfStringSet( dpnd_data_dx_names, [] )

# Some variables used below
#
VectorCreate( psd_input )
VectorCreate( psd )
VectorCreate( integrand )
NumericCreate( iwc_test )
NumericCreate( dmean_test )
NumericCreate( ntot_test )
StringCreate( psd_name )



# Define ice spheres and calculate mass for each size
#
NumericSet( scat_species_a, 523 )
NumericSet( scat_species_b, 3 )
VectorCreate( mass )
VectorPower( mass, psd_size_grid, scat_species_b )
VectorMultiply( mass, mass, scat_species_a )

#
# 1-moment PSDs, rain
#
VectorSet( psd_input, [] )
Append( psd_input, iwc )
Matrix1RowFromVector( pnd_agenda_input, psd_input )
ArrayOfStringSet( pnd_agenda_input_names, ["RWC"] )

psdAbelBoutle12( t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "RWC for Abel 12" )

psdWangEtAl16( t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "RWC for Wang 16" )



# Define ice spheres and calculate mass for each size
#
NumericSet( scat_species_a, 480 )
NumericSet( scat_species_b, 3 )
VectorPower( mass, psd_size_grid, scat_species_b )
VectorMultiply( mass, mass, scat_species_a )


#
# 1-moment PSDs, ice
#
VectorSet( psd_input, [] )
Append( psd_input, iwc )
Matrix1RowFromVector( pnd_agenda_input, psd_input )
ArrayOfStringSet( pnd_agenda_input_names, ["IWC"] )

psdDelanoeEtAl14( n0Star=-999, Dm=-999, t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "IWC for DarDar" )

psdFieldEtAl07( regime = "TR", t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "IWC for F07T" )
#
psdFieldEtAl07( regime = "ML", t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "IWC for F07M" )

psdMcFarquaharHeymsfield97( t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "IWC for MH97" )

psdModifiedGammaMass( n0=-999, mu=1, la=1e5, ga=1, t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
Compare( iwc, iwc_test, max_dev )
CompareRelative( iwc, iwc_test, max_dev, "IWC for MGD/N0" )

psdModifiedGammaMass( n0=1e11, mu=0, la=-999, ga=1, t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "IWC for MGD/Lambda" )



#
# 2-moment PSDs: Mass + Dmean
#
VectorSet( psd_input, [] )
Append( psd_input, iwc )
Append( psd_input, dmean )
Matrix1RowFromVector( pnd_agenda_input, psd_input )
ArrayOfStringSet( pnd_agenda_input_names, ["IWC","Dmean"] )


psdModifiedGammaMassXmean(  n0 = -999, mu = 2, la = -999, ga = 1,
                            t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "IWC for MGD: mass + dmean" )
VectorVectorMultiply( integrand, integrand, psd_size_grid )  
Trapz( dmean_test, psd_size_grid, integrand )
NumericDivide( dmean_test, dmean_test, iwc_test )
CompareRelative( dmean, dmean_test, max_dev, "Dmean for MGD: mass + dmean" )



#
# 2-moment PSDs: Mass + Ntot
#
VectorSet( psd_input, [] )
Append( psd_input, iwc )
Append( psd_input, ntot )
Matrix1RowFromVector( pnd_agenda_input, psd_input )
ArrayOfStringSet( pnd_agenda_input_names, ["IWC","Ntot"] )


psdModifiedGammaMassNtot(  n0 = -999, mu = 2, la = -999, ga = 1,
                            t_min = 0, t_max = 400 )
VectorExtractFromMatrix( psd, psd_data, 0, "row" )
VectorVectorMultiply( integrand, psd, mass )                        
Trapz( iwc_test, psd_size_grid, integrand )
CompareRelative( iwc, iwc_test, max_dev, "IWC for MGD: mass + ntot" )
Copy( integrand, psd )  
Trapz( ntot_test, psd_size_grid, integrand )
CompareRelative( ntot, ntot_test, max_dev, "Ntot for MGD: mass + ntot" )

}
