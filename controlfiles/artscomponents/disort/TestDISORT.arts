
#DEFINITIONS:  -*-sh-*-
#
# filename: simpleDISORT.arts
#
# Demonstration of a DISORT scattering calculation
#
# Author: Claudia Emde
# 
# The DISORT calculation is set up in a very similar way to the 
# DOIT calculation. 

Arts2 {

INCLUDE "general/general"
INCLUDE "general/continua.arts"
INCLUDE "general/agendas.arts"

# Agenda for scalar gas absorption calculation
Copy(abs_xsec_agenda, abs_xsec_agenda__noCIA)

Copy( iy_main_agenda, iy_main_agenda__Emission )
Copy( ppath_agenda, ppath_agenda__FollowSensorLosPath )
Copy( blackbody_radiation_agenda, blackbody_radiation_agenda__Planck )
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )
Copy( ppath_step_agenda, ppath_step_agenda__GeometricPath )

jacobianOff

# Frequency grid 
# --------------
# This example is only monochromatic. Note: The frequency must be contained
# in the gas absorption lookup table.  
VectorSet(f_grid, [229.5e9])
 

# Pressure grid
ReadXML( p_grid, "testdata/testdoit_p_grid.xml" )

# Definition of species
abs_speciesSet( species=["H2O-PWR98", "O2-PWR93", "N2-SelfContStandardType"] )

# Atmospheric profiles
AtmRawRead( basename="testdata/tropical" )


# Gas absorption from lookup table 
# ---------------------------------
abs_lookupInit

# Lookup tables can be computed using the MATLAB (please contact Stefan)
ReadXML( abs_lookup, "testdata/testdoit_gas_abs_lookup.xml" )	

abs_lookupAdapt

# absorption from LUT
Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__LookUpTable )

IndexSet( stokes_dim, 1 )
refellipsoidEarth

AtmosphereSet1D
AtmFieldsCalc


# Definition of Earth surface
# ----------------------------
MatrixSetConstant( z_surface, 1, 1, 500 )

MatrixSetConstant( surface_emissivity_DISORT, 1, 1, 1 )

atmfields_checkedCalc
atmgeom_checkedCalc



# Definition of sensor position and LOS
#--------------------------------------
# This file holds the viewing angles of the sensor:
#IndexSet(nelem){ 1 }
#VectorSetConstant(vector_1){
#        value = 150
#}

VectorCreate( vector_1 )
VectorNLinSpace( vector_1, 9, 100, 180 )

# Sensor altitude from earth surface
VectorCreate( vector_2 )
VectorSetConstant( vector_2, 9, 96000.1 )

Matrix1ColFromVector( sensor_pos, vector_2 )
Matrix1ColFromVector( sensor_los, vector_1 )

# SensorOff means that the result of the calculation are the radiances,
# which are not modified by sensor properties
sensorOff
sensor_checkedCalc


# Agendas for clearsky radiative transfer calculation
# ----------------------------------------------------
#AgendaSet( rte_agenda ){
   #RteStd{}
#}

# Specification of cloud
# -----------------------
    
ScatSpeciesInit

# Special DISORT function, because cloudbox needs to be extended over the 
# ehole atmosphere
cloudboxSetDisort

# Only one particle type is added in this example
# Note that you must use p20 data, because disort only works with this
# format. 
ScatElementsPndAndScatAdd(
  scat_data_files=["testdata/testdoit_p30f229-231T214-225r100NP-1ar1_5ice.xml",
                   "testdata/testdoit_p30f229-231T214-225r100NP-1ar1_5ice.xml"],
  pnd_field_files=["testdata/testdoit_pnd_field_1D.xml",
                   "testdata/testdoit_pnd_field_1D.xml"] )
scat_dataCheck
pnd_fieldCalcFrompnd_field_raw

cloudbox_checkedCalc

# Select interpolation method ('linear' or 'polynomial'):
# ----------------------------------------------------

# For limb calculations is is very important to have a fine resolution     
# about 90°. 
# For DISORT we use the same angular grids as output.
DoitAngularGridsSet( N_za_grid = 19,
                     N_aa_grid = 10,
	             za_grid_opt_file = "" )

# Calculate opticle properties of particles and add particle absorption
# and extiction to the gaseous properties to get total extinction and
# absorption:

AgendaSet(spt_calc_agenda){
   opt_prop_sptFromMonoData
}

AgendaSet( opt_prop_part_agenda ){
   ext_matInit
   abs_vecInit
   ext_matAddPart
   abs_vecAddPart
}
	
AgendaSet(iy_cloudbox_agenda){
    iyInterpCloudboxField(rigorous=0)
    }


#==================start==========================

propmat_clearsky_agenda_checkedCalc

# Perform scattering calculation 
DisortCalc
    
# Calculate RT from cloudbox boundary to the sensor
#
StringSet( iy_unit, "RJBT" )
#
yCalc

WriteXML(in=y)

Print(y, 1)

#==================stop==========================

} # End of Main
 
