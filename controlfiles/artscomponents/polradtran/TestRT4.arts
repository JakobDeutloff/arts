#DEFINITIONS:  -*-sh-*-
#
# filename: TestRT4.arts
#
# Demonstration of a RT4 scattering calculation
#
# The setup follows the one used by TestDisort (in disort/ folder) and
# TestDOITFromIndividualFields.arts (in doit/ folder).
#
# Author: Jana Mendrok
# 

Arts2 {

# for test case, first, run the proprietary RT4 test.
# REMOVE (or outcomment) when you use this as template for your RT4-based
# calculations.
INCLUDE "TestRT4Test.arts"


# here starts the the actual ARTS RT4 interface test/example
INCLUDE "artscomponents/disort/indivfieldsatmo_setup.arts"

# touch all surface-related variables, such that they exist.
# fill the ones required for your choice of ground type below (see online doc
# for what choices are available and what input is required for each of them).
Touch(surface_complex_refr_index)
Touch(surface_reflectivity)
Touch(surface_scalar_reflectivity)
Touch(surface_skin_t)
Touch(surface_rtprop_agenda)


StringCreate( ground_type )

# the "old way": use RT4's own Lambertian surface methods
#StringSet( ground_type, "L" )
# Set surface skin temperature based on t_field
#Extract( t_surface, t_field, 0 )
#VectorCreate( tskin_vector )
#VectorExtractFromMatrix( tskin_vector, t_surface, 0, "column" )
#Extract( surface_skin_t, tskin_vector, 0 )

# the "new way": use ARTS' surface_rtprop_agenda (defined in the include above as 
## VectorSetConstant( surface_scalar_reflectivity, 1, 0. )
## Copy( surface_rtprop_agenda,
##       surface_rtprop_agenda__Specular_NoPol_ReflFix_SurfTFromt_surface )
StringSet( ground_type, "A" )



# Set cloudbox limits 
# ---------------------------------------------------------------------
#cloudboxSetFullAtm
cloudboxSetAutomatically

# Particle Number Density field calculation
# -----------------------------------------
pnd_fieldCalcFromscat_speciesFields



# 7. RT4 settings-----------------------------------------------------
#------------------------------------------------------------------------

# For RT4 we use the same angular grids as output.
#DOAngularGridsSet( N_za_grid=38 )

# Calculate opticle properties of particles and add particle absorption
# and extiction to the gaseous properties to get total extinction and
# absorption:

AgendaSet( spt_calc_agenda ){
  opt_prop_sptFromMonoData
}

AgendaSet( opt_prop_part_agenda ){
  ext_matInit
  abs_vecInit
  ext_matAddPart
  abs_vecAddPart
}
	
AgendaSet( iy_cloudbox_agenda ){
  # use rigorous here when sensor viewing angles close to horizon shall be
  # calculated. as cloudbox boundary for RT4 will always be at TOA, there is
  # always an orders-of-magnitude gradient when involving downwelling or
  # horizontal direction in the radiance interpolation.
  iyInterpCloudboxField(rigorous=0)
}


# 8. The RT calculation--------------------------------------------------
#------------------------------------------------------------------------

# Consistency checks
atmfields_checkedCalc
atmgeom_checkedCalc
cloudbox_checkedCalc  
sensor_checkedCalc


# Perform scattering calculation
RT4Init #( nstreams=32 )
RT4Calc( ground_type=ground_type ) #( nstreams=32 )
#WriteXML( output_file_format, doit_i_field )
   
# Calculate RT from cloudbox boundary to the sensor
yCalc

#WriteXML( output_file_format, y )

# Verify results
VectorCreate(yREFERENCE)
ReadXML( yREFERENCE, "artscomponents/disort/yREFERENCEfromDOIT.y.xml" )
Compare( y, yREFERENCE, 1. )

} # End of Main
 
