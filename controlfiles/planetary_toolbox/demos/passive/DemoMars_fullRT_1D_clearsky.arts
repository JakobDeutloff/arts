#
# 2014-02-06 Jana Mendrok
#
# FIXME: add versions handling
# - particles/scattering
# - 3D
# - Faraday/Zeeman(?)

################################################################################
#                                                                              #
# This is a demo/template file. The USER is supposed to MODIFY it according    #
# to his/her needs (better, make a copy of it and adapt the copy).             #
#                                                                              #
################################################################################
#                                                                              #
# This is a template file for "full" radiative transfer simulations, i.e.,     #
# providing synthetic sensor measurements. The demo case covers following      #
# conditions/capabilities:                                                     #
#  - passive sensor                                                            #
#  - 1D calculations only                                                      #
#  - monochromatic pencilbeam simulation (no FOV/antenna pattern convolution,  #
#     no bandwidth/instrumental line shape/... convolution)                    #
#  - non-particle (i.e., "clearsky") calculations                              #
#  - no magnetic field effects (Zeeman, Faraday)                               #
#                                                                              #
#  + scalar to full polarisation RT possible (limitations might apply in       #
#     combination with, e.g., certain surface property settings)               #
#  + multiple viewing directions (allowing their specification by viewing      #
#     angles and tangent altitudes in parallel) from fixed platform altitude   #
#  + selection of atmospheric scenario and abs_species from toolbox data       #
#     (handled by INCLUDE file)                                                #
#  + consideration of wind Doppler shifts (by switching on winds in            #
#     atmospheric scenario INCLUDE file)                                       #
#  + selection of absorption calculation approach (on-the-fly, lookup table    #
#     calculation, pre-calculated lookup table from file)                      #
#  + consideration of refraction selectable                                    #
#  + selection of surface properties (handled by INCLUDE file)                 #
#                                                                              #
# The user is supposed to set certain parameters or select from a choice of    #
# settings. Details of setting rules are given at the place of the settings.   #
#                                                                              #
# Selections and settings to be done are between the flags START USER SETTINGS #
# and END USER SETTINGS. The rest of the file shall not be modified,           #
# particularly settings marked with 'do NOT modify'.                           #
#                                                                              #
# The file provides following output (written to file):                        #
#   iy         as the WSV                                                      #
#               radiance; units selectable                                     #
#               one file per pencilbeam (i.e., viewing angle)                  #
#   iy_aux     as the WSV                                                      #
#               auxiliary output parameters (particularly of along-the-path    #
#               type), selectable variety                                      #
#               all parameters in one file, but separate per pencilbeam        #
#                                                                              #
# This template is set up to make use of the following include files           #
# (internally they might use further includes. See their respective headers    #
# for details):                                                                #
#   demos/common/DemoMarsAtmo1D.arts                                           #
#   demos/common/DemoMarsSurface1D.arts                                        #
#   includes/common/makegeometry1D_unrefracted.arts                            #
#   includes/common/makegeometry1D_refracted-air_effectivetanh.arts            #
#   includes/common/makegeometry1D_refracted-air_geometrictanh.arts            #
#   includes/common/makegeometry1D_refracted-air+electrons_effectivetanh.arts  #
#   includes/common/makegeometry1D_refracted-air+electrons_geometrictanh.arts  #
#   includes/common/use-absOnTheFly.arts                                       #
#   includes/common/make-and-use-absLUT.arts                                   #
#                                                                              #
################################################################################

Arts2 {

# do NOT modify
INCLUDE "general/general.arts"
INCLUDE "general/continua.arts"
INCLUDE "general/agendas.arts"
INCLUDE "general/planet_mars.arts"


# do NOT modify
NumericCreate( obsh )
VectorCreate( tanh )
VectorCreate( viewang )



################################################################################
# START USER SETTINGS - Modify settings according to you wishes                #
################################################################################

# unit of intensity output( "PlanckBT" or "RJBT" or "1" )
StringSet( iy_unit, "PlanckBT" )

# monochromatic frequency grid
VectorLinSpace( f_grid, 595e9, 600e9, 10e6 )
WriteXML( in=f_grid )

# number of Stokes parameters to consider ( 1: scalarRT, 4: fully polarised )
IndexSet( stokes_dim, 1 )


# ---
# Definition of atmosphere
# ---
# which scenario, which absorption species, ...
#  - use a copy of DemoMarsAtmo1D.arts adapted to your needs/wishes
#  - provides as output: atmosphere_dim (1D), abs_species , p_grid, z/t/vmr_field,
#     wind_w_field (if switched on in adaptation of DemoMarsAtmo1D.arts)
#####
INCLUDE "planetary_toolbox/demos/common/DemoMarsAtmo1D.arts"
WriteXML( in=abs_species )



# ---
# Sensor parameters: viewing geometry
# ---
# platform altitude (will be identical for all viewing directions)
NumericSet( obsh, 450e3 )
# zenith viewing angles (e.g., for slantlooking, but working for ALL geometries)
# - can be empty
VectorSet( viewang, [180., 150., 120.] )
# tangent altitudes (in m) for limb views
# - can be empty
# - can be "theoretical" tangent altitudes, i.e., pointing BELOW the
#    zero-altitude level
# Note: Mars atm scenarios only reach down to 5m, i.e. that's the lowest
#  possible surface altitude, hence the lowest "true" limb altitude possible
VectorSet( tanh, [5., 4.e3, 10.e3, 12.e3, 20.e3, 40.e3, 60.e3] ) 



# ---
# Type of geometry/refraction
# ---
#  Prepares the (1D) viewing angles for the RT calculation from the above
#   specified viewang and tanh. Select proper INCLUDE for the type/level of
#   refraction that shall be considered.
#  NOTE: uncomment the ONE(!) you want. If more than one uncommented, the run
#   will crash.
# ---

# 1) no refraction at all
#INCLUDE "planetary_toolbox/includes/common/makegeometry1D_unrefracted.arts"

# 2) refraction (by "air" only)
# 2-1) tangent altitudes = effective tangent altitudes of refracted rays
#INCLUDE "planetary_toolbox/includes/common/makegeometry1D_refracted-air_effectivetanh.arts"

# 2-2) tangent altitudes = theoretical tangent altitudes of unrefracted rays
#  (effective ones will be lower)
#INCLUDE "planetary_toolbox/includes/common/makegeometry1D_refracted-air_geometrictanh.arts"

# 3) refraction (by "air" and free electrons)
#  These require abs=species to contain "free_electrons".
# 3-1) tangent altitudes = effective tangent altitudes of refracted rays
INCLUDE "planetary_toolbox/includes/common/makegeometry1D_refracted-air+electrons_effectivetanh.arts"

# 3-2) tangent altitudes = theoretical tangent altitudes of unrefracted rays
#  (effective ones will be lower)
#INCLUDE "planetary_toolbox/includes/common/makegeometry1D_refracted-air+electrons_geometrictanh.arts"



# ---
# Absorption calculation approach
# ---
#  NOTE: uncomment the ONE(!) you want. If more than one uncommented, the LATEST
#   RULES, but you might waste time with in-the-end-not-applied calculations.
# ---

# 1) use on-the-fly absorption
#  (time consuming! but recommended when doing calculations with winds or other
#  Doppler shifts.)
#INCLUDE "planetary_toolbox/includes/common/use-absOnTheFly.arts"

# 2) calculate and use absorption lookup table (generally recommended)
INCLUDE "planetary_toolbox/includes/common/make-and-use-absLUT.arts"
# 2-1) if you want to keep the absLUT data for later use or analysis, uncomment:
WriteXML( in=abs_lookup )

# 3) use a previously calculated absorption lookup table
#  if you want to use an absLUT created earlier, uncomment the following 3 lines
#  (you might also have to specify the name. check online-doc of ReadXML)
#Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__LookUpTable )
#ReadXML( out=abs_lookup )
#abs_lookupAdapt



# ---
# Surface settings
# ---

# definition of surface (altitude, reflection model, temperature)
#  - use a copy of DemoMarsSurface1D.arts adapted to your needs/wishes
#  - provides as output: z_surface, surface_rtprop_agenda (additionally:
#     surface_skin_t (cases B-1) or t_surface (cases B-3))
#####
INCLUDE "planetary_toolbox/demos/common/DemoMarsSurface1D.arts"



# ---
# Define (auxiliary) data output
# ---
# Uncomment all parameters you want as auxiliary output (i.e., in addition to
#  total radiance/brigthness temperature). For meaning of each paramters see
#  online-doc of the WSM selected for iy_main_agenda (here: iyEmissionStandard).
# NOTE: Last element NOT to be followed by comma.
# NOTE: Only use "Absorption, species X" up to the number of entries in
#  abs_species (clearsky calculations in Mars have at maximum 20 abs_species
#  entries, i.e. highest valid index is 19).

ArrayOfStringSet( iy_aux_vars,
     [
      "Pressure", 
      "Temperature", 
      "Absorption, summed", 
#      "Absorption, species 0",
#      "Absorption, species 1",
#      "Absorption, species 2",
#      "Absorption, species 3",
#      "Absorption, species 4",
#      "Absorption, species 5",
#      "Absorption, species 6",
#      "Absorption, species 7",
#      "Absorption, species 8",
#      "Absorption, species 9",
#      "Absorption, species 10",
#      "Absorption, species 11",
#      "Absorption, species 12",
#      "Absorption, species 13",
#      "Absorption, species 14",
#      "Absorption, species 15",
#      "Absorption, species 16",
#      "Absorption, species 17",
#      "Absorption, species 18",
#      "Absorption, species 19",
      "iy", 
#      "Transmission",
      "Optical depth"
     ] )



################################################################################
# END USER SETTINGS                                                            #
################################################################################


# setting agendas needed for RT calc (there are alternative settings, though)
#####
Copy( iy_main_agenda, iy_main_agenda__Emission )
Copy( blackbody_radiation_agenda, blackbody_radiation_agenda__Planck )
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )


# no scattering, no jacobian
#####
jacobianOff
cloudboxOff

# the checks necessary for full RT calc
#####
atmfields_checkedCalc
atmgeom_checkedCalc
cloudbox_checkedCalc
propmat_clearsky_agenda_checkedCalc 


# and the (clearsky) RT calc
#####
NumericCreate( za )
AgendaCreate( forloop_agenda_angles )
AgendaSet( forloop_agenda_angles )
{
  Extract( za, allzang, forloop_index )
  rte_losSet( za=za, aa=za )
  Print( rte_los, 0 )
  iyCalc
  WriteXMLIndexed( in=iy, file_index=forloop_index )
  WriteXMLIndexed( in=iy_aux, file_index=forloop_index )
}

IndexCreate( nangles )
nelemGet( nangles, allzang )
IndexStepDown( nangles, nangles )
Copy( forloop_agenda, forloop_agenda_angles )
ForLoop( forloop_agenda, 0, nangles, 1  )


}
