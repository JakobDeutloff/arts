#
# Full RT case for Mars
# - monochromatic pencil beam for a selection of viewing angles (slant & limb
#    possible)
# - basic clear-sky (no particles, no magfield)
# - atmospheric scenario and abs_species selection handled by INCLUDE file
# - way of absorption calculation (on-the-fly, calc abs_lookup, read abs_lookup)
#    selectable by INCLUDE file
# - winds can be switched on by approapriate changes in atmospheric scenario
#    INCLUDE file
# - refraction type selectable
# - blackbody surface at bottom of atmosphere with Tsurf=Tatm
#
# high priority FIXME:
#    - properly sort/mark user settings and no-modify parts
#    - proper description
#
# To be done/checked/fixed:
# - more sophisticated surface setup. allow for choices.
#   - surface altitude - via comment/uncomment? or each version packed into a ctrl-file?
#     - a. fixed altitude
#     - b. fixed atm-level index
#   - surface temperature - via comment/uncomment? or each version packed into a ctrl-file?
#     a. fixed
#     b. from atm-t-field (at surface altitude)
#     c. from (scenario dependent) read-in surface t-field
#   - surface reflectivity
#     a. blackbody
#     b. fixed
#       b1. also select surface reflection model (specular vs. lambertian)
#     c. from surface complex refractive index
#       c1. fixed (is that possible at all)
#       c2. from (scenario dependent) read-in surface cRI field
#
# - version with particles/scattering
# - 3D version
# - some (nice(r)) way to specify aux output(?)
# - version with Faraday(?)
#
# Done: CIA agendas without CIA species? works!
# Done: do slant & limb work within one setup and can either or both be empty? yes!
# Done: version with refraction (made that selectable via INCLUDEs)
# Done: version with wind (select wind in atmosphere include)
# Done: version with OnTheFly absorption
# Done: stoke_dim as user setting
#
# 2014-02-03 Jana Mendrok

Arts2 {
INCLUDE "general/general.arts"
INCLUDE "general/continua.arts"
INCLUDE "general/agendas.arts"
INCLUDE "general/planet_mars.arts"


NumericCreate( obsh )
VectorCreate( tanh )
VectorCreate( viewang )


################################################################################
# START USER SETTINGS - Modify settings according to you wishes                #
################################################################################

# unit of intensity output( "PlanckBT" or "RJBT" or "1" )
StringSet( iy_unit, "PlanckBT" )

# monochromatic frequency grid
VectorLinSpace( f_grid, 320e9, 325e9, 1e9 )
WriteXML( in=f_grid )

# number of Stokes parameters to consider ( 1: scalarRT, 4: fully polarised )
IndexSet( stokes_dim, 4 )


# definition of atmosphere (which scenario, which absorption species, ...
#  - use a copy of DemoMarsAtmo1D.arts adapted to your needs/wishes
#  - provides as output: atmosphere_dim (1D), abs_species , p_grid, z/t/vmr_field,
#     wind_w_field (if switched on in adaptation of DemoMarsAtmo1D.arts)
#####
INCLUDE "planetary_toolbox/demos/passive/My-Version-Of-DemoMarsAtmo1D.arts"
WriteXML( in=abs_species )



# Sensor parameters: viewing geometry
# ---
# platform altitude (will be identical for all viewing directions)
NumericSet( obsh, 450e3 )
# zenith viewing angles (e.g., for slantlooking, but working for ALL geometries)
# - can be empty
VectorSet( viewang, [180.] )
# tangent altitudes (in m) for limb views
# - can be empty
VectorSet( tanh, [5., 4.e3, 10.e3, 12.e3, 20.e3, 40.e3, 60.e3] ) #note: our Mars surface is at 5m!


# Type of geometry/refraction
#  Prepares the (1D) viewing angles for the RT calculation from the above
#   specified viewang and tanh. Select proper INCLUDE for the type/level of
#   refraction that shall be considered.
#  NOTE: uncomment the ONE(!) you want. If more than one uncommented, the run
#   will crash.
# ---

# 1) no refraction at all
#INCLUDE "planetary_toolbox/includes/common/makegeometry1D_unrefracted.arts"

# 2) refraction (by "air" only)
# 2-1) tangent altitudes = effective tangent altitudes of refracted rays
INCLUDE "planetary_toolbox/includes/common/makegeometry1D_refracted-air_effectivetanh.arts"

# 2-2) tangent altitudes = theoretical tangent altitudes of unrefracted rays
#  (effective ones will be lower)
#INCLUDE "planetary_toolbox/includes/common/makegeometry1D_refracted-air_geometrictanh.arts"

# 3) refraction (by "air" and free electrons)
#  These require abs=species to contain "free_electrons".
# 3-1) tangent altitudes = effective tangent altitudes of refracted rays
#INCLUDE "planetary_toolbox/includes/common/makegeometry1D_refracted-air+electrons_effectivetanh.arts"

# 3-2) tangent altitudes = theoretical tangent altitudes of unrefracted rays
#  (effective ones will be lower)
#INCLUDE "planetary_toolbox/includes/common/makegeometry1D_refracted-air+electrons_geometrictanh.arts"



# Absorption calculation approach
#  NOTE: uncomment the ONE(!) you want. If more than one uncommented, the LATEST
#   RULES, but you might waste time with in-the-end-not-applied calculations.
# ---

# 1) use on-the-fly absorption
#  (time consuming! but recommended when doing calculations with winds or other
#  Doppler shifts.)
#INCLUDE "planetary_toolbox/includes/common/use-absOnTheFly.arts"

# 2) calculate and use absorption lookup table (generally recommended)
INCLUDE "planetary_toolbox/includes/common/make-and-use-absLUT.arts"
# 2-1) if you want to keep the absLUT data for later use or analysis, uncomment:
#WriteXML( in=abs_lookup )

# 3) use a previously calculated absorption lookup table
#  if you want to use an absLUT created earlier, uncomment the following 3 lines
#  (you might also have to specify the name. check online-doc of ReadXML)
#Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__LookUpTable )
#ReadXML( out=abs_lookup )
#abs_lookupAdapt


################################################################################
# END USER SETTINGS                                                            #
################################################################################




# setting agendas needed for RT calc (there are alternative settings, though)
#####
Copy( iy_main_agenda, iy_main_agenda__Emission )
Copy( blackbody_radiation_agenda, blackbody_radiation_agenda__Planck )
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )



# surface settings
#  - for now we just take a blackbody surface at the very bottom of the atmosphere
#  and of atmospheric temperature
#  - more complex setups to be implemented in a next step
#####
Extract( z_surface, z_field, 0 )
Extract( t_surface, t_field, 0 )

Copy( surface_rtprop_agenda, surface_rtprop_agenda__Blackbody_SurfTFromt_field )

#VectorSet( lat_true, [0.] )
#VectorSet( lon_true, [180.] )

#GriddedField2Create( gf2tmp )
#ReadXML( gf2tmp, tsurfname )
#GriddedFieldLatLonRegrid( out=gf2tmp, in=gf2tmp )
#FieldFromGriddedField( out=t_surface, in=gf2tmp )

#Copy( casename, basename )
#Append( casename, risurfname )
#GriddedField5Create( ri_surface )
#ReadXML( ri_surface, casename )

#AgendaSet( surface_rtprop_agenda )
#{
#   specular_losCalc
#   InterpSurfaceFieldToPosition( out=surface_skin_t, field=t_surface )
#   surface_complex_refr_indexFromGriddedField5( complex_refr_index_field=ri_surface )
#   surfaceFlatRefractiveIndex
#} 


# Define auxiliary data output we want to have
#ArrayOfStringSet( iy_aux_vars,  
#    [ "Pressure", 
#      "Temperature", 
#      "Absorption, summed", 
#      "Absorption, species 0",
#      "Absorption, species 1",
#      "Absorption, species 2",
#      "Absorption, species 3",
#      "Absorption, species 4",
#      "Absorption, species 5",
#      "Absorption, species 6",
#      "Absorption, species 7",
#      "Absorption, species 8",
#      "Absorption, species 9",
#      "Absorption, species 10",
#      "Absorption, species 11",
#      "Absorption, species 12",
#      "Absorption, species 13",
#      "Absorption, species 14",
#      "Absorption, species 15",
#      "Absorption, species 16",
#      "Absorption, species 17",
#      "Absorption, species 18",
#      "iy", 
#      "Transmission",
#      "Optical depth" ] )





# no scattering, no jacobian
#####
jacobianOff
cloudboxOff

# the checks necessary for full RT calc
#####
atmfields_checkedCalc
atmgeom_checkedCalc
cloudbox_checkedCalc
abs_xsec_agenda_checkedCalc
propmat_clearsky_agenda_checkedCalc 


# and the (clearsky) RT calc
#####
NumericCreate( za )
AgendaCreate( forloop_agenda_angles )
AgendaSet( forloop_agenda_angles )
{
  Extract( za, allzang, forloop_index )
  rte_losSet( za=za, aa=za )
  Print( rte_los, 0 )
  iyCalc
  WriteXMLIndexed( in=iy, file_index=forloop_index )
#  WriteXMLIndexed( in=iy_aux, file_index=forloop_index )
}

IndexCreate( nangles )
nelemGet( nangles, allzang )
IndexStepDown( nangles, nangles )
Copy( forloop_agenda, forloop_agenda_angles )
ForLoop( forloop_agenda, 0, nangles, 1  )


}
