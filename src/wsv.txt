VARIABLE : lines
DATA TYPE: ArrayOfLineRecord
DESCRIPTION:
A list of spectral line data.

VARIABLE : lines_per_tg
DATA TYPE: ArrayOfArrayOfLineRecord
DESCRIPTION:
A list of spectral line data for each tag.
Dimensions: (tag_groups.nelem()) (# of lines for this tag)

VARIABLE : tgs
DATA TYPE: TagGroups
DESCRIPTION:
This is an array of arrays of OneTag tag definitions.
It defines the available tag groups for the calculation
of absorption coefficients and weighting functions.
Contrary to the original Bredbeck definition, tags within a
group must belong to the same species, because one VMR profile
is associated with each tag group.

VARIABLE : wfs_tgs
DATA TYPE: TagGroups
DESCRIPTION:
This is an array of arrays of tag group definitions.
It defines the tag groups for the calculation of weighting
functions. The selected tag groups must be a subgroup of the
tag groups defined for the absorption coefficient calculation.

VARIABLE : lineshape
DATA TYPE: ArrayOfLineshapeSpec
DESCRIPTION:
Lineshape specification: function, norm, cutoff. There is one entry for
each abs_tag, not for each species. This means if you have several
abs_tags for different isotopes or transitions of a species, you
may use different lineshapes.

VARIABLE : cont_description_names
DATA TYPE: ArrayOfString
DESCRIPTION:
Continuum model names. This variable should contain a list of
names of continuum models. Associated with this WSV is the WSV
`cont_description_parameters' which should contain continuum
parameters for each model. Allowed models currently are:

H2O-ContStandardSelf: Self component of a simple empirical
   continuum model a la Liebe/Rosenkranz. Needs two parameters.
H2O-ContStandardForeign: Foreign component of a simple empirical
   continuum model a la Liebe/Rosenkranz. Needs two parameters.

VARIABLE : cont_description_parameters
DATA TYPE: ArrayOfVector
DESCRIPTION:
Continuum model parameters. See the WSV `cont_description_names'
for a detailed description of the allowed continuum models. There
should be one parameter vector here for each entry in
`cont_description_names'.

VARIABLE : raw_ptz
DATA TYPE: Matrix
DESCRIPTION:
Matrix has rows:
1. Pressure in Pa
2. Temperature in K
3. Altitude in m

VARIABLE : raw_vmrs
DATA TYPE: ArrayOfMatrix
DESCRIPTION:
The individual VMR profiles. Each species VMR profile comes with a
pressure profile. The different species can hence be on different
grids.
The matrix has rows:
1. Pressure in Pa
2. VMR profile (absolute number)
The array dimension is determined by the number of tag groups.

VARIABLE : p_abs
DATA TYPE: Vector
DESCRIPTION:
The pressure grid for the absorption coefficients [Pa]. This
is the basic independent grid for the absorption calculation, both
in the 1D and 2D case. Therefore it remains a vector, even in 2D.
The "raw" atmospheric data shall be interpolated to p_abs before
the absorption calculations starts.

VARIABLE : f_mono
DATA TYPE: Vector
DESCRIPTION:
The monochromatic frequency grid [Hz]. This grid is used when
calculating absorption and pencil b

VARIABLE : t_abs
DATA TYPE: Vector
DESCRIPTION:
Temperature associated with the pressures in p_abs [K]

VARIABLE : z_abs
DATA TYPE: Vector
DESCRIPTION:
Vertical altitudes associated with the pressures in p_abs [m]

VARIABLE : h2o_abs
DATA TYPE: Vector
DESCRIPTION:
The total water profile associated with the pressures in p_abs [-]

VARIABLE : n2_abs
DATA TYPE: Vector
DESCRIPTION:
The total nitrogen profile associated with the pressures in p_abs [-]

VARIABLE : vmrs
DATA TYPE: Matrix
DESCRIPTION:
The VMRs (unit: absolute number) on the p_abs grid.
Dimensions: [tag_groups.nelem(), p_abs.nelem()]

VARIABLE : abs
DATA TYPE: Matrix
DESCRIPTION:
The matrix of absorption coefficients (in units of [1/m]).
Dimensions: [f_mono.nelem(), p_abs.nelem()]

VARIABLE : abs_per_tg
DATA TYPE: ArrayOfMatrix
DESCRIPTION:
These are the absorption coefficients individually for each
tag group. The Array contains one matrix for each tag group,
the matrix format is the same as that of abs

VARIABLE : xsec_per_tg
DATA TYPE: ArrayOfMatrix
DESCRIPTION:
These are the cross sections individually for each tag
group. The Array contains one matrix for each tag group,
the matrix format is the same as that of abs

VARIABLE : hse
DATA TYPE: Vector
DESCRIPTION:
This vector holds the parameters for calculating hydrostatic 
equilibrium (HSE). The length of the vector is either 1 or 5, where
the values are: 
   1: On/off flag. 0 = ignore HSE, 1 = consider HSE.
   2: The pressure of the reference point [Pa]. 
   3: The altitude of the reference point [m]. 
   4: Gravitational acceleration at the geoid surface [m/s2]. 
   5: Number of iterations of the calculations.
If the on/off flag is set to 1, the length of the vector must be 5,
while if the flag is 0 a length of 1 is OK.

VARIABLE : emission
DATA TYPE: Index
DESCRIPTION:
Boolean to include emssion in the calculations.
If this variable is set to 0 (zero) pure transmission calculations 
be simulated and, for example, yCalc will give optical thicknesses 
instead of intensities.

VARIABLE : za_pencil
DATA TYPE: Vector
DESCRIPTION:
Pencil beam zenith angle, the angle between zenith and the LOS [deg].
This grid is applied when calculating pencil beam spectra.

VARIABLE : z_tan
DATA TYPE: Vector
DESCRIPTION:
Tangent altitude for the different LOS [m].
These tangent altitudes include the effect of refraction (if set). 
In the case of a ground intersection, a geometrical prolongation 
below the ground is applied to determine the tangent altitude. 
For upward observations where there are no tangent altitudes, 
z_tan is set to 999 km.

VARIABLE : z_plat
DATA TYPE: Numeric
DESCRIPTION:
The vertical altitude, above the geiod, of the platform [m].

VARIABLE : l_step
DATA TYPE: Numeric
DESCRIPTION:
The maximum length, along the LOS, between the points of LOS [m].
The final step length will in most cases equal the selected length.
There are two rare exceptions:
  1. Downward observations from within the atmsophere, where the step
     length is adjusted downwards to get an integer number of steps
     between the sensor and the tangent or ground point.
  2. Limb sounding and the distance from the tangent point to the
     atmospheric limit (the highest absorption altitude) is smaller
     the selected length. The length is then adjusted to this
     distance

VARIABLE : refr
DATA TYPE: Index
DESCRIPTION:
Boolean to consider refraction (0=no refraction).

VARIABLE : refr_lfac
DATA TYPE: Index
DESCRIPTION:
This factor determines the step length used during the ray tracing 
performed when considering refraction. 
The step length applied is l_step divided by refr_lfac. 
Accordingly, this factor gives how many ray tracing steps that are 
performed for each step of the LOS.

VARIABLE : refr_model
DATA TYPE: String
DESCRIPTION:
A String giving what refraction model (or parameterization) to use
for the calculation of refractive index.

VARIABLE : refr_index
DATA TYPE: Vector
DESCRIPTION:
The refractive index associated with the pressures in p_refr [-].


VARIABLE : r_geoid
DATA TYPE: Numeric
DESCRIPTION:
The local curvature radius of the geoid along the LOS [m].

VARIABLE : z_ground
DATA TYPE: Numeric
DESCRIPTION:
The vertical altitude above the geiod of the ground [m].

VARIABLE : t_ground
DATA TYPE: Numeric
DESCRIPTION:
The physical temperature of the ground [K].

VARIABLE : e_ground
DATA TYPE: Vector
DESCRIPTION:
The ground emission factor for the frequencies in f_mono [0-1].

VARIABLE : los
DATA TYPE: LOS
DESCRIPTION:
Structure to define the line of sight (LOS). See los.h.

VARIABLE : source
DATA TYPE: ArrayOfMatrix
DESCRIPTION:
Mean source functions between the points of the LOS.

VARIABLE : trans
DATA TYPE: ArrayOfMatrix
DESCRIPTION:
The transmissions between the points of the LOS [-].

VARIABLE : y_space
DATA TYPE: Vector
DESCRIPTION:
Radiation entering the atmosphere at the start of the LOS,
typically cosmic background radiation.

VARIABLE : y
DATA TYPE: Vector
DESCRIPTION:
The working spectrum.

VARIABLE : y0
DATA TYPE: Vector
DESCRIPTION:
A reference spectrum. This variable can be used e.g. to save a copy
of y or to compare the spectra before and after some operation(s).

VARIABLE : absloswfs
DATA TYPE: ArrayOfMatrix
DESCRIPTION:
Line of sight weighting functions.

VARIABLE : k_grid
DATA TYPE: Vector
DESCRIPTION:
Grid for the retrieval identity for which weighting functions (WFS)
shall be calculated (when applicable).
For example, pressure altitude grid for species WFs.

VARIABLE : k
DATA TYPE: Matrix
DESCRIPTION:
The weighting functions (WFs) for a single retrieval/error identity.

VARIABLE : k_names
DATA TYPE: ArrayOfString
DESCRIPTION:
Name(s) on the retrieval identity associated with k.

VARIABLE : k_aux
DATA TYPE: Matrix
DESCRIPTION:
Auxiliary data for k. The number of rows of this matrix equals the
length of the state vector for the retrieval identity (the number of
columns of k).
The columns hold different quantities:
  Col 1: retrieval grid (or correspondingly)
  Col 2: a priori values

VARIABLE : kx
DATA TYPE: Matrix
DESCRIPTION:
The state weighting function matrix.

VARIABLE : kx_names
DATA TYPE: ArrayOfString
DESCRIPTION:
Names on the retrieval identities associated with kx.

VARIABLE : kx_lengths
DATA TYPE: ArrayOfIndex
DESCRIPTION:
The length of the state vector for each retrieval identity in kx.

VARIABLE : kx_aux
DATA TYPE: Matrix
DESCRIPTION:
Auxiliary data for kx. As k_aux but with the data of the different
retrieval identies appended vertically.

VARIABLE : kb
DATA TYPE: Matrix
DESCRIPTION:
The model parameters weighting function matrix.

VARIABLE : kb_names
DATA TYPE: ArrayOfString
DESCRIPTION:
Names on the model parameter identities associated with kb.

VARIABLE : kb_lengths
DATA TYPE: ArrayOfIndex
DESCRIPTION:
The length of the model vector for each retrieval identity in kb.

VARIABLE : kb_aux
DATA TYPE: Matrix
DESCRIPTION:
Auxiliary data for kb. As k_aux but with the data of the different
forward model identies appended vertically.

VARIABLE : f_sensor
DATA TYPE: Vector
DESCRIPTION:
The centre frequency of the sensor's backend channels [Hz].
That is, the frequency vector before any data reduction.
It is assumed that the same backend is used for all za_sensor.

VARIABLE : za_sensor
DATA TYPE: Vector
DESCRIPTION:
The centre zenith angle for the spectra recorded by the sensor [deg].
That is, the zenith angle vector before any data reduction.

VARIABLE : f_y
DATA TYPE: Vector
DESCRIPTION:
The frequency for every element of y [Hz]. This vector has the same
length as y and is mainly for display purposes.
If no data reduction is performed f_y = [f_sensor;f_sensor...] where
the number of repetitions of f_sensor equals the number of zenith
angles. With data reduction there is no general relationship between
f_y and f_sensor. If the data reduction is performed using some
eigenvectors, f_y can be set to [1;2;3;...;n]

VARIABLE : za_y
DATA TYPE: Vector
DESCRIPTION:
The zenith_angle for every element of y [deg]. This vector has the
same length as y and is mainly for display purposes.
If no data reduction is performed za_y=[za_sensor(1);za_sensor(1)...]
where the number of repetitions of the elements of za_sensor equals
the number of frequencies. With data reduction there is no general
relationship between za_y and za_sensor. If the data reduction is
performed using some eigenvectors, za_y can be set to [1;1;1;...;1]

VARIABLE : y_cal1
DATA TYPE: Vector
DESCRIPTION:
A first calibration spectrum. This spectrum is assumed to be used for
all zenith angles. This vector corresponds accordingly to f_sensor.
See for example yLoadCalibration for usage of this spectrum.

VARIABLE : y_cal2
DATA TYPE: Vector
DESCRIPTION:
A first calibration spectrum. This spectrum is assumed to be used for
all zenith angles. This vector corresponds accordingly to f_sensor.
See for example yLoadCalibration for usage of this spectrum.

VARIABLE : i_cal1
DATA TYPE: Vector
DESCRIPTION:
The intensity or brightness temperature corresponding to y_cal1.
See for example yLoadCalibration for usage.

VARIABLE : i_cal2
DATA TYPE: Vector
DESCRIPTION:
The intensity or brightness temperature corresponding to y_cal2.
See for example yLoadCalibration for usage.

VARIABLE : batchname
DATA TYPE: String
DESCRIPTION:
Default basename for batch data.

VARIABLE : ybatch
DATA TYPE: Matrix
DESCRIPTION:
A batch of spectra.
The spectra are stored as columns in a matrix

