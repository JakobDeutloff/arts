#DEFINITIONS:  -*-sh-*-
#This file was generated by arts_file_from_command_list 
#in the PyARTS python module

Main{

output_file_formatSetAscii{
}

IndexSet(nelem){
value=1
}

VectorSet(f_grid){
value=501180000000.0
}

IndexSet(f_index){
value=0
}

IndexSet(stokes_dim){
value=4
}

AtmosphereSet3D{
}

ReadXML(p_grid){
filename="data/p_grid.xml"
}

ReadXML(lat_grid){
filename="data/lat_grid.xml"
}

ReadXML(lon_grid){
filename="data/lon_grid.xml"
}

gas_speciesSet{
species=["ClO","O3","H2O,H2O-MPM89","N2-SelfContStandardType"]
}

AtmRawRead{
basename="data/tropical"
}

AtmFieldsCalcExpand1D{
}

r_geoidSpherical{
r=-1
}

nrowsGet(r_geoid){
}

ncolsGet(r_geoid){
}

MatrixSet(z_surface){
value=500.0
}

AgendaSet(iy_surface_agenda){
  InterpAtmFieldToRteGps( surface_skin_t, t_field ){}
  surfaceBlackbody{
  }
  surfaceCalc{
  }
}

gas_abs_lookupInit{
}

ReadXML(gas_abs_lookup){
filename="data/gas_abs_lookup.xml"
}

gas_abs_lookupAdapt{
}

AgendaSet(scalar_gas_absorption_agenda){
  abs_scalar_gasExtractFromLookup{
}

}

AgendaSet(opt_prop_gas_agenda){
  ext_matInit{
  }
  abs_vecInit{
  }
  ext_matAddGas{
  }
  abs_vecAddGas{
  }
}

cloudboxSetManually{
p1=18200.0
p2=15600.0
lat1=-2.0
lat2=2.0
lon1=-2.0
lon2=2.0
}

ParticleTypeInit{
}

ParticleTypeAddAll{
filename_scat_data="data/scat_data_files.xml"
filename_pnd_field="data/pnd_field.xml"
}

pnd_fieldCalc{
}

AgendaSet(spt_calc_agenda){
  opt_prop_sptFromMonoData{
  }
}

scat_data_monoCalc{
}

AgendaSet(iy_space_agenda){
  MatrixCBR(iy,f_grid){
  }
}

AgendaSet(ppath_step_agenda){
  ppath_stepGeometric{
    lmax=-1
  }
}

AgendaSet(rte_agenda){
  RteEmissionStd{
  }
}


AgendaSet( iy_cloudbox_agenda ){
  ScatteringMonteCarlo{
    maxiter=2000
    rng_seed=-1
    record_ppathcloud=0
    record_ppath=0
    silent=1
    record_histdata=0
    histdata_filename=""
  }
  Print(iy){
    level=1
  }
  Print(i_montecarlo_error){
    level=1
  }
}


rte_losSet{
za=99.14
aa=180
}

rte_posSet{
r_or_z=95000.1
lat=9.1
lon=0
}

rte_posAddRgeoid{
}

Matrix1RowFromVector(sensor_pos,rte_pos){
}

Matrix1RowFromVector(sensor_los,rte_los){
}

AntennaSet1D{
}

VectorSet(mblock_za_grid){
value=0
}

sensorOff{
}

RteCalc{
}

VectorToTbByRJ(y,y){
}

Print(y){
level=1
}

}

