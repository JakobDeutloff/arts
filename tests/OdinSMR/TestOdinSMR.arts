# This is a test doing Odin-SMR simulations.
#
# The calculations are using multiple measuremeent blocks and the control file
# can easily be modified to work for 2D or 3D atmospheres.
# For 1D limb sounding it can be more effecient to do the simulations inside
# a single measurement block. Especially if the number tangent altitudes are 
# high and the spacing between tangent altitudes small. See TestOdinSMR_1D.arts
# for an example on such calculations.
#
# Author: Patrick Eriksson


Arts2 {

# Select frequency band here:
#
#INCLUDE "odin/odinsmr_501.arts"
INCLUDE "odin/odinsmr_544.arts"


# Possibility to change considered species
# For example
#SpeciesSet( abs_species, [
#  "H2O,H2O-ForeignContStandardType,H2O-SelfContStandardType",
#  "O3" 
#] )



# ---- Atmospheric scenario --------------------------------------------------

# A pressure grid rougly matching 0 to 80 km in 250 m steps.
# The pressure grid is for the SMR processing not uniform. It is there
# created to be most dense over the actual range of tangent altitudes.
#
VectorNLogSpace( p_grid, 321, 1000e2, 1 )

# This example assumes 1D
AtmosphereSet1D

# Atmospheric profiles here taken from Fascod
AtmRawRead( t_field_raw, z_field_raw, vmr_field_raw, abs_species, "tropical" )
#
AtmFieldsCalc

# Get ground altitude (z_surface) from z_field
MatrixExtractFromTensor3( z_surface, z_field, 0 )



# ---- Create absorption table -----------------------------------------------

abs_lines_per_speciesCreateFromLines

AbsInputFromAtmFields
SpeciesSet( abs_nls, [] )
VectorSetExplicitly( abs_nls_pert, [] )
VectorSetExplicitly( abs_t_pert, [] )

abs_lookupCreate

AgendaSet( abs_scalar_gas_agenda ){
  abs_scalar_gasExtractFromLookup
}



# ---- Sensor position and LOS -----------------------------------------------

# Number of tangent altitudes
IndexSet( n_tan, 4 )

# Sensor position, with platform altitude set to 600 km
MatrixSet( sensor_pos, n_tan, 1, 600e3 )
sensor_posAddRgeoid

# LOS, specified by the corresponding geometrical tangent altitudes
# Tangent altitudes will be equally spaced between 50 and 20 km
VectorNLinSpace( z_tan, n_tan, 50e3, 20e3 )
VectorZtanToZa1D( za, sensor_pos, r_geoid, atmosphere_dim, z_tan )
Matrix1ColFromVector( sensor_los, za )



# ---- Calculate, switch to RF and save

RteCalc_NEW


WriteXML( output_file_format, y,         "TestOdinSMR.y.xml.generated" )

WriteXML( output_file_format, z_tan,     "TestOdinSMR.ztan.xml.generated" )

WriteXML( output_file_format, y_f_NEW,   "TestOdinSMR.y_f.xml.generated" )

WriteXML( output_file_format, sensor_response_f_grid_NEW, 
                        "TestOdinSMR.sensor_response_f_grid.xml.generated" )

WriteXML( output_file_format, y_pol_NEW, "TestOdinSMR.y_pol.xml.generated" )

WriteXML( output_file_format, y_za_NEW,  "TestOdinSMR.y_za.xml.generated" )

}
