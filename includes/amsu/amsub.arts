#DEFINITIONS:  -*-sh-*-

# ARTS setup file for AMSUB simulations

Arts {


# 1. General
#-----------

output_file_formatSetZippedAscii

# AMSU uses Planck brightness temperatures
# ---
StringSet( y_unit ){ "PlanckBT" }
StringSet( jacobian_unit ){ "RJBT" }

# Surface
AgendaSet(surface_prop_agenda){
   InterpAtmFieldToRteGps( surface_skin_t, t_field )
   surfaceSimple
} 

# 2. Spectroscopy
#----------------

# We take a smaller cutoff, since the line-by-line calculation is 
# only for O3, where only the local lines matter.
# Could be speed-optimized further by selecting only the relevant 
# lines from the line list.
abs_lineshapeDefine{ shape               = "Voigt_Kuntz6"
                     normalizationfactor = "VVH"
                     cutoff              = 5e9 }

SpeciesSet(abs_species){["H2O-PWR98",
                         "O3",
			 "O2-PWR93",
			 "N2-SelfContStandardType"]}

# Read HITRAN catalog (needed for O3):
#abs_linesReadFromHitran2004{
#   filename = "/storage1/pool/lookup2/hitran2004/HITRAN04.par"
#   fmin     = 80e9
#   fmax     = 200e9 
#}
#WriteXML(abs_lines){"amsu/amsub.hitran04_lines.xml"}

ReadXML(abs_lines){"amsu/amsub.hitran04_lines.xml"}
abs_lines_per_speciesCreateFromLines

# WARNING: If you redifine abs_species, and want to do a line-by-line
# calculation, you also have to call
# abs_lines_per_speciesCreateFromLines again.


# 3. Sensor:
#-----------

# Definition of sensor position and LOS
# ---
ReadXML(sensor_los){"amsu/amsub.sensor_los.xml"}
nrowsGet(sensor_los)
ncolsGet(sensor_los)
MatrixSet(sensor_pos){850e3}
sensor_posAddRgeoid


# Start sensor response setup
# ---

# Normalise the sensor response
# ---
IndexSet(sensor_norm){ 1 }

# Antenna
# ---
AntennaOff


# See setup_input.m for details around other sensor variables 


# f_mono
#
ReadXML(f_grid){"amsu/amsub.f_grid.xml"}


# Mixer:
#
ReadXML(lo_multi_NEW){"amsu/amsub.lo.xml"}
ReadXML(sideband_response_multi_NEW){"amsu/amsub.sideband_response.xml"}
ReadXML(sideband_mode_multi_NEW){"amsu/amsub.sideband_mode.xml"}


# Spectrometer:
#
ReadXML(f_backend_multi_NEW){"amsu/amsub.f_backend.xml"}
ReadXML(backend_channel_response_multi_NEW){"amsu/amsub.backend_channel_response.xml"}


sensor_responseInit_NEW
sensor_responseMultiMixerBackend_NEW


# End of sensor response setup


}
